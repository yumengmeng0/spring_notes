<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--    目标类交给IOC容器-->
    <bean id="accountService" class="org.example.service.impl.AccountServiceImpl"></bean>
    <!--    通知类交给IOC容器-->
    <bean id="myAdvice" class="org.example.advice.MyAdvice"></bean>

    <!--
        execution(函数声明)
        execution([修饰符] 返回值类型 包名.类名.方法名(参数))
        - 访问修饰符可以省略
        execution(void org.example.service.impl.AccountServiceImpl.transfer())
        - 返回值类型、包名、类名、方法名可以使用*代替，代表任意
        execution( * *.*.*.*.*.*())
        - 包名与类名之间的一个点（.）代表当前包下的类，两个点（..）代表当前包及其子包下的类
          execution( * *..*.*())
        - 参数可以使用两点（..）代表任意个数，任意类型的参数列表
        execution(* *..*.*(..))
    -->

    <!--    AOP配置-->
    <aop:config>
        <!--        配置切面: 切入点 + 通知-
            配置目标类的transfer方法执行时，使用myAdvice的before方法进行前置增强
        -->
        <aop:aspect ref="myAdvice">
            <!-- 抽取切点表达式-->
            <aop:pointcut id="myPointCut" expression="execution(* org.example.service.impl.AccountServiceImpl.*(..))"/>
<!--            <aop:before method="before"-->
<!--                        pointcut="execution(* org.example.service.impl.AccountServiceImpl.*(..))"></aop:before>-->
            <aop:before method="before"
                        pointcut-ref="myPointCut"></aop:before>
            <aop:after-returning method="afterReturning"
                                 pointcut-ref="myPointCut"></aop:after-returning>
            <aop:after-throwing method="afterThrowing" pointcut-ref="myPointCut"></aop:after-throwing>
            <aop:after method="after" pointcut-ref="myPointCut"></aop:after>
<!--            <aop:around method="around" pointcut-ref="myPointCut"></aop:around>-->
        </aop:aspect>
    </aop:config>
</beans>